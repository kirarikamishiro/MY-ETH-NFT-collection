{"ast":null,"code":"var _jsxFileName = \"/Users/hasamayoshihito/Documents/ETH-NFT-collection/nft-collection-starter-project/src/App.js\",\n    _s = $RefreshSig$();\n\n// App.js\nimport React, { useMemo } from \"react\";\nimport \"./styles/App.css\";\nimport { CONTRACT_ADDRESS, TWITTER_HANDLE, TWITTER_LINK, MAX_SUPPLY } from \"./constants\";\nimport { useApp } from \"./hooks/useApp\"; // フロントエンドとコントラクトを連携するライブラリをインポートします。\n\nimport { ethers } from \"ethers\";\nimport twitterLogo from \"./assets/twitter-logo.svg\";\nimport myEpicNft from \"./utils/MyEpicNFT.json\";\n/*const TWITTER_HANDLE = \"KamishiroKirari\";\nconst TWITTER_LINK = `https://twitter.com/${TWITTER_HANDLE}`;\nconst OPENSEA_LINK = \"\";\nconst TOTAL_MINT_COUNT = 50;*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  // ユーザーのウォレットアドレスを格納するために使用する状態変数を定義します。\n  const {\n    inProgress,\n    lastTokenId,\n    isRinkebyTestNetwork,\n    connectWallet,\n    currentAccount,\n    myLatestTokenId,\n    askContractToMintNft\n  } = useApp();\n  const showMintCondition = useMemo(() => {\n    return !inProgress && currentAccount !== \"\" && isRinkebyTestNetwork;\n  }, [currentAccount, inProgress, isRinkebyTestNetwork]);\n  const showOpenSeaLinkCondition = useMemo(() => {\n    return !inProgress && myLatestTokenId;\n  }, [inProgress, myLatestTokenId]);\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"a\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"QPa3ZhqOPfXDJbXhNwnPth8XAwk=\", false, function () {\n  return [useApp];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/hasamayoshihito/Documents/ETH-NFT-collection/nft-collection-starter-project/src/App.js"],"names":["React","useMemo","CONTRACT_ADDRESS","TWITTER_HANDLE","TWITTER_LINK","MAX_SUPPLY","useApp","ethers","myEpicNft","App","inProgress","lastTokenId","isRinkebyTestNetwork","connectWallet","currentAccount","myLatestTokenId","askContractToMintNft","showMintCondition","showOpenSeaLinkCondition"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,IAAgBC,OAAhB,QAA+B,OAA/B;AACA,OAAO,kBAAP;AACA,SACEC,gBADF,EAEEC,cAFF,EAGEC,YAHF,EAIEC,UAJF,QAKO,aALP;AAMA,SAASC,MAAT,QAAuB,gBAAvB,C,CAEA;;AACA,SAASC,MAAT,QAAuB,QAAvB;;AAGA,OAAOC,SAAP,MAAsB,wBAAtB;AAEA;AACA;AACA;AACA;;;;AAIA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB;AAEA,QAAM;AACJC,IAAAA,UADI;AAEJC,IAAAA,WAFI;AAGJC,IAAAA,oBAHI;AAIJC,IAAAA,aAJI;AAKJC,IAAAA,cALI;AAMJC,IAAAA,eANI;AAOJC,IAAAA;AAPI,MAQFV,MAAM,EARV;AAWA,QAAMW,iBAAiB,GAAGhB,OAAO,CAAC,MAAM;AACtC,WAAO,CAACS,UAAD,IAAeI,cAAc,KAAK,EAAlC,IAAwCF,oBAA/C;AACD,GAFgC,EAE9B,CAACE,cAAD,EAAiBJ,UAAjB,EAA6BE,oBAA7B,CAF8B,CAAjC;AAIA,QAAMM,wBAAwB,GAAGjB,OAAO,CAAC,MAAM;AAC7C,WAAO,CAACS,UAAD,IAAeK,eAAtB;AACD,GAFuC,EAErC,CAACL,UAAD,EAAaK,eAAb,CAFqC,CAAxC;AAIA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAGD,CAzBD;;GAAMN,G;UAWAH,M;;;KAXAG,G;AA2BN,eAAeA,GAAf","sourcesContent":["// App.js\nimport React, { useMemo } from \"react\";\nimport \"./styles/App.css\";\nimport {\n  CONTRACT_ADDRESS,\n  TWITTER_HANDLE,\n  TWITTER_LINK,\n  MAX_SUPPLY,\n} from \"./constants\";\nimport { useApp } from \"./hooks/useApp\";\n\n// フロントエンドとコントラクトを連携するライブラリをインポートします。\nimport { ethers } from \"ethers\";\n\nimport twitterLogo from \"./assets/twitter-logo.svg\";\nimport myEpicNft from \"./utils/MyEpicNFT.json\";\n\n/*const TWITTER_HANDLE = \"KamishiroKirari\";\nconst TWITTER_LINK = `https://twitter.com/${TWITTER_HANDLE}`;\nconst OPENSEA_LINK = \"\";\nconst TOTAL_MINT_COUNT = 50;*/\n\n\n\nconst App = () => {\n  // ユーザーのウォレットアドレスを格納するために使用する状態変数を定義します。\n\n  const {\n    inProgress,\n    lastTokenId,\n    isRinkebyTestNetwork,\n    connectWallet,\n    currentAccount,\n    myLatestTokenId,\n    askContractToMintNft,\n  } = useApp();\n\n\n  const showMintCondition = useMemo(() => {\n    return !inProgress && currentAccount !== \"\" && isRinkebyTestNetwork;\n  }, [currentAccount, inProgress, isRinkebyTestNetwork]);\n\n  const showOpenSeaLinkCondition = useMemo(() => {\n    return !inProgress && myLatestTokenId;\n  }, [inProgress, myLatestTokenId]);\n\n  return (\n    <h1>a</h1>\n  );\n};\n\nexport default App;"]},"metadata":{},"sourceType":"module"}